//#TO DO							
swagger ya sve apije, dobre definicije contrcata, endpointa.

*** detaljnije proc kroz jwt uradeno context security, ono je bitno
	+++ AUTHENTICATE RUTA MORA DA IGNORISEEE BILO KAKAV HEADER AUTHORIZATION I NE TREBA BACATI IZUZETKE STA GOD TAMO BILO !!!

@autowired detaljnije izuciti, prednosti mane

<scope> provjeriti one vrste sta koja radi i tako oko dependency

OPEN API   VS  SWAGGER ?

_________________________________

!!! KAKO DA NAPRAVIM FIELD LVL SECURITY da kada neko ode na rutu questions a nije admin ne moze vidjeti jesu li odgovori tacni (ako to zelim bezobzira na smisao u ovoj stiucaiji)
 try this: 	- https://stackoverflow.com/questions/31442613/spring-security-entity-field-level-security
		+ Kako vratiti null kada pokusa user dobaviti questions koji sadrzi correct answera, a za admina drugacije. Nije valjda ista ruta sa 2 dopustenja? 
   kaze on SPECIFICNO:	Kako da se ista ruta drugacije tretira kada je u headeru user a kako kada je admin. (my: "u kontroleru i servisu se moze uzeti i provjeriti koja je pa pozvati npr druge servise")
 
HITNO @BEAN uz last tut auth mang.

@transsactional.
 
## Koristi validclasshelpere za business logic validation (tacno 4 odgovora, samo 1 true)

ConstraintViolationException se baca kada prilikom spasavanja u db prekrsimo ogranicenja validnog inputa

@VALID 
DTO + VALID ? za svaki reqDTO moram primati i valid a onda i za db da provjerava kada se pise u db da se sta nije promjenilo 
 dakle na svakom dto kod mene treba provjera @size za level 

##########Security is the enemy of convenience, and vice versa.


https://docs.spring.io/spring-security/site/docs/4.2.x/reference/html/el-access.html     help








































_______________________


Far future:
1. Koristim mockbean sa springboottest i runwith springrunner.class za obicne UNIT testove (radi dto) -> msm da ih to usporava ali nisam pronasao rjesenje kako da sa mock uradim jer je dto uvijek null.

__________ Far future ANSWER 1._____________

Problem 1 far future, se moze rijesiti tako sto se stavi i na dtomaper @Mock, uz koristenje u @test metodama na nacin

when(answerRepository.findById(13L)).thenReturn(Optional.of(new Answer("Answer of the question", false)));
        Answer answer = answerRepository.findById(13L).get();
     when(answerDtoMapper.answerToResponseAnswer(answer)).thenCallRealMethod().thenReturn(new AnswerResponseDto());

i tek tada dtomaper bude pravi objekat


answer 2 for 1.  nisam testirao al nesot slicno ovome bi moglo raditi
        @Before
        public void setUp() {
            when(modelMapper.map(any(), any())).thenReturn(userDTO);

            userDTO.setId(1L);
            userDTO.setUsername("zavada");
            userDTO.setUserId("33b4c069-e907-45a9-8d49-2042044c56e0");
        }
_______________________________



